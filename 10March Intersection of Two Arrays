/*
Given two integer arrays nums1 and nums2, return an array of their intersection. 
Each element in the result must be unique and you may return the result in any order.

Example 1:
Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]

Example 2:
Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.
 
Constraints:
1 <= nums1.length, nums2.length <= 1000
0 <= nums1[i], nums2[i] <= 1000
*/

//method-1 Using freq array of constraint size 
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        int freq[]=new int[1001];
        for(int i=0;i<nums1.length;i++)
        {
            if(freq[nums1[i]]==0)
                freq[nums1[i]]=1;
        }
        for(int j=0;j<nums2.length;j++)
        {
            //if no already exists in nums1
            //then only it can be a part of interesection
            if(freq[nums2[j]]==1)
                freq[nums2[j]]++;
        }

        ArrayList<Integer> list=new ArrayList<>();
        for(int i=0;i<=1000;i++)
        {
            if(freq[i]==2)
                list.add(i);
        }

        int intersection[]=new int[list.size()];
        for(int i=0;i<list.size();i++)
        {
            intersection[i]=list.get(i);
        }

        return intersection;
    }
}

//optimizing it
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        int freq[]=new int[1001];
        for(int i=0;i<nums1.length;i++)
        {
            if(freq[nums1[i]]==0)
                freq[nums1[i]]=1;
        }
        
        ArrayList<Integer> list=new ArrayList<>();
        for(int j=0;j<nums2.length;j++)
        {
            //if no already exists in nums1
            //then only it can be a part of interesection
            if(freq[nums2[j]]==1)
            {
                list.add(nums2[j]);
                freq[nums2[j]]=0;//to add that ele only once
            }    
        }

        int intersection[]=new int[list.size()];
        for(int i=0;i<list.size();i++)
        {
            intersection[i]=list.get(i);
        }

        return intersection;
    }
}

//method-2 Using HashSet(not so good)
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        HashSet<Integer> set=new HashSet<>();
        ArrayList<Integer> al=new ArrayList<>();
        for(int n1:nums1)
            set.add(n1);
        
        for(int i=0;i<nums2.length;i++)
        {
            if(set.contains(nums2[i]) && !al.contains(nums2[i]))
            {
                al.add(nums2[i]);
            }
        }

        int intersection[]=new int[al.size()];
        for(int i=0;i<al.size();i++)
        {
            intersection[i]=al.get(i);
        }

        return intersection;
    }
}
